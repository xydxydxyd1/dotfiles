snippet main "main file template for assembly"
.global _start
.equ wordsize, 4

.data	# data section: global and static variables

.text

_start:

done:
    nop
endsnippet

snippet fun "function"
$1:
	$1_prologue:
		.equ num_locals, 0
		.equ num_saved_regs,3
		push %ebp
		movl %esp, %ebp
		subl $(num_locals + num_saved_regs) * wordsize, %esp

		.equ saved_ebx, (-3*wordsize)
		.equ saved_esi, (-2*wordsize)
		.equ saved_edi, (-1*wordsize)

		movl %ebx, saved_ebx(%ebp)
		movl %esi, saved_esi(%ebp)
		movl %edi, saved_edi(%ebp)


	$1_epilogue:
		movl saved_ebx(%ebp), %ebx
		movl saved_esi(%ebp), %esi
		movl saved_edi(%ebp), %edi
		movl %ebp, %esp
		pop %ebp
		ret
$1_end:
endsnippet

snippet loop "loop template"
$1_loop_start:
	# TODO: exit condition
	cmpl
	jmp $1_loop_end

	# TODO: increment
	jmp $1_loop_start
$1_loop_end:
endsnippet
