global !p

def insert_itm_command(snip):
	output = ""
	for line in snip.splitlines():
		for i in range(0, len(line)):
			if not line[i].isspace():
				output += line[:i] + "\t\item " + line[i:]
				output += '\n'
				break
	return output[:-1]

def isMath():
    return int(vim.eval('vimtex#syntax#in_mathzone()')) > 0

endglobal


#######################################################################
#                         Template file heads                         #
#######################################################################

snippet head "general head"
\documentclass{report}
\usepackage[margin=1in]{geometry}
\usepackage{graphicx}
\usepackage{subfiles}

\begin{document}

$0

\end{document}
endsnippet

snippet subfhead "head for subfiles"
\documentclass[../main.tex]{subfiles} 

\begin{document}
$1
\end{document}
endsnippet

snippet dndhead "head for DnD template"
\documentclass[10pt,twoside,twocolumn,openany,nodeprecatedcode]{dndbook}

\usepackage[english]{babel}
\usepackage[utf8]{inputenc}

\begin{document}
$1
\end{document}
endsnippet

snippet hishead "history head"
\usepackage{multicol}
\usepackage{enumitem}   % Better lists
\setlist{itemsep=1pt}
endsnippet

snippet ecshead "head for ecs"
\usepackage{minted}	% For code listing
endsnippet

snippet mathead "head for math"
\usepackage{multicol,enumitem}
\usepackage{amsmath,amssymb,physics}
$0
endsnippet

snippet dmathead "discrete math head"
\usepackage{amsfonts,amsthm}
\newtheorem{definition}{Def.}
\newtheorem{theorem}{Thm.}
\newtheorem{claim}{Claim.}
\newtheorem{axiom}{Axiom.}
\newtheorem{lemma}{Lemma.}
endsnippet

snippet hrefhead "hyperref head"
\usepackage{hyperref}
\hypersetup{
	colorlinks=true,
	linkcolor=blue,
	filecolor=magenta,      
	urlcolor=cyan,
	pdftitle={Overleaf Example},
	pdfpagemode=FullScreen,
	}

\urlstyle{same}
endsnippet

snippet tcboxhead "head for tcolorbox"
\usepackage{tcolorbox}
\newtcolorbox{tcbcompact}[1]
{
    boxsep=0.1mm,
    after=\ignorespacesafterend,
    title={#1}
}
endsnippet

#######################################################################
#                         Special Characters                          #
#######################################################################

snippet bslash "backslash in text mode"
\textbackslash $0
endsnippet

snippet -> "arrow in text mode"
$\rightarrow$
endsnippet

# snippet ( "Close parentheses automatically" Ai
# ($1)$0
# endsnippet

#######################################################################
#                            Tag Shortcuts                            #
#######################################################################
snippet pckg "usepackage"
\usepackage{$1}
endsnippet

snippet boxedc "compact tcolorbox environment"
\begin{tcbcompact}{$1}
    ${2:${VISUAL}}
\end{tcbcompact}
endsnippet

snippet par "paragraph"
\paragraph{$1}
endsnippet
snippet subsub "subsubsection"
\subsubsection{$1}
endsnippet
snippet sub "subsection"
\subsection{$1}
endsnippet

snippet beg "begin"
\begin{$1}
    ${0:${VISUAL}}
\end{$1}
endsnippet

snippet $ "inline math" A
\$${1:${VISUAL}}\$$0
endsnippet

snippet \[ "paragraph math"
\[
	$1
\]
endsnippet

snippet mtil "minted inline code" i
\mintinline{${1:text}}|$2|
endsnippet

snippet mted "minted paragrpah code"
\begin{minted}[linenos]{${1:text}}
$2
\end{minted}
endsnippet

snippet itemize "itemized list"
\begin{itemize}
`!p snip.rv = insert_itm_command(snip.v.text + t[1])`
\end{itemize}
endsnippet

snippet i "item"
\item
endsnippet

snippet enumerate "enumerated list"
\begin{enumerate}
`!p snip.rv = insert_itm_command(t[1])`
$0${1:${VISUAL}}
\end{enumerate}
endsnippet

snippet href "hyper reference"
\href{${1:url}}{${2:text}}
endsnippet

#######################################################################
#                                Math                                 #
#######################################################################

context "isMath()"
snippet m_ps "math power series" i
\sum_{n=0}^{\infty} c_n(x-a)^n
endsnippet
context "isMath()"
snippet sum "summation" i
\sum_{i=0}^{n}
endsnippet

snippet txt "text in math mode" Ai
\text{$1}
endsnippet

##########
#  Matrices  #
##########

context "isMath()"
snippet "([A-Z])set" "math mode vector" Air
`!p snip.rv = "\\mathbb{" + match.group(1) + "}"`
endsnippet
context "isMath()"
snippet quad "for matrix spacing" A
\quad
endsnippet

###########
#  Logic  #
###########
context "isMath()"
snippet not "swap not for logic equivalent in math mode" i
\neg
endsnippet

context "isMath()"
snippet and "swap and for logic equivalent in math mode" i
\land
endsnippet

context "isMath()"
snippet or "swap or for logic equivalent in math mode" i
\lor
endsnippet

#####################
#  Other operators  #
#####################
context "isMath()"
snippet flr "swap or for logic equivalent in math mode" i
\lfloor $1 \rfloor $0
endsnippet

context "isMath()"
snippet ^^ "math mode superscript" Ai
^{$1}$0
endsnippet

context "isMath()"
snippet __ "math mode subscript" Ai
_{$1}$0
endsnippet

context "isMath()"
snippet "(\\vec{[A-Za-z]})T" "math mode autodetect transpose vector" Air
`!p snip.rv = match.group(1) + "^T"`
endsnippet
context "isMath()"
snippet "([A-Za-z])([0-9])" "math mode autodetect subscript" Air
`!p snip.rv = match.group(1) + "_" + match.group(2)`
endsnippet

# Linear Algebra
context "isMath()"
snippet vb "vector block" i
\vb*{$0}
endsnippet
context "isMath()"
snippet "vec([A-Za-z])" "old math mode vector" Air
`!p snip.rv = "\\vec{" + match.group(1) + "}"`
endsnippet
snippet "vb([A-Za-z0])" "math mode vector" Air
`!p snip.rv = "\\vb*{" + match.group(1) + "}"`
endsnippet
context "isMath()"
snippet "([A-Za-z])vb" "math mode vector" ir
`!p snip.rv = "\\vb*{" + match.group(1) + "}"`
endsnippet
context "isMath()"
snippet "([A-Za-z])TT" "Transpose" Air
`!p snip.rv = match.group(1) + "^T"`
endsnippet

context "isMath()"
snippet "hat([A-Za-z])" "math mode hat" Air
`!p snip.rv = "\\hat{" + match.group(1) + "}"`
endsnippet
context "isMath()"
snippet "([A-Za-z])hat" "math mode hat" Air
`!p snip.rv = "\\hat{" + match.group(1) + "}"`
endsnippet

context "isMath()"
snippet hat "math mode unit vector" i
\hat{${1:${VISUAL}}}$0
endsnippet

# mathematical operators
context "isMath()"
snippet sqrt "Squre root" Ai
\sqrt{ ${1:${VISUAL}} }$0
endsnippet

context "isMath()"
snippet frac "Fraction" Ai
\frac{ ${1:${VISUAL}} }{ $2 }$0
endsnippet

context "isMath()"
snippet bico "binomial coefficient" Ai
(^{$1}_{$2})$0
endsnippet

# Short hand for subscripts
context "isMath()"
snippet y0 "y_0" Ai
y_0
endsnippet
context "isMath()"
snippet z0 "z_0" Ai
z_0
endsnippet
context "isMath()"
snippet x0 "x_0" Ai
x_0
endsnippet

context "isMath()"
snippet {{ "braces" Ai
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

context "isMath()"
snippet [[ "brackets" Ai
\left[ ${1:${VISUAL}} \right]$0
endsnippet

context "isMath()"
snippet (( "parentheses" Ai
\left( ${1:${VISUAL}} \right)$0
endsnippet

context "isMath()"
snippet | "absolute value" i
\left| ${1:${VISUAL}} \right|$0
endsnippet

context "isMath()"
snippet sin "sine" Ai
\sin
endsnippet
context "isMath()"
snippet cos "cosine" Ai
\cos
endsnippet
context "isMath()"
snippet log "log" Ai
\log
endsnippet

snippet ttt "math text"
\texttt{$1}
endsnippet

snippet ... "ellipsis" Ai
\ldots
endsnippet

snippet `` "quote" Ai
\`\`$0 ''
endsnippet
