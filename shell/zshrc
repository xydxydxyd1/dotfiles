echo "Extending shell configuration..."
source "$HOME/.dotfiles/shell/shell.sh"

echo "Loading zsh configurations..."

rc_dir="$DF_DIR/shell"

path+=(~/scripts/zsh)
export PATH

setopt PROMPT_SUBST
export PS1='%F{green}%n%f@%F{cyan}%m%f:%2~%F{yellow}$(__git_ps1 " (%s)")%f$ '

# Completion
zstyle ':completion:*' completer _complete
# Case-sensitive, match-from-middle completion
zstyle ':completion:*' matcher-list '' '+l:|=* r:|=*'
# Enable completion
autoload -Uz compinit; compinit
# Tab twice to menu
zstyle ':completion:*' menu select
# Sudo completion
zstyle ':completion::complete:*' gain-privileges 1
# Vim bindings for completion
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# Vim cursor on cli
cursor_mode() {
    # See https://ttssh2.osdn.jp/manual/4/en/usage/tips/vim.html for cursor shapes
    cursor_block='\e[2 q'
    cursor_beam='\e[6 q'

    function zle-keymap-select {
        if [[ ${KEYMAP} == vicmd ]] ||
            [[ $1 = 'block' ]]; then
            echo -ne $cursor_block
        elif [[ ${KEYMAP} == main ]] ||
            [[ ${KEYMAP} == viins ]] ||
            [[ ${KEYMAP} = '' ]] ||
            [[ $1 = 'beam' ]]; then
            echo -ne $cursor_beam
        fi
    }

    zle-line-init() {
        echo -ne $cursor_beam
    }

    zle -N zle-keymap-select
    zle -N zle-line-init
}

cursor_mode

eval "$(direnv hook zsh)"

# FZF integration
# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# Set history
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=${HISTSIZE}
HISTFILE=~/.zsh_history

# Load extraconf
if [[ -f $rc_dir/extraconf.zsh ]]; then
    source "$rc_dir/extraconf.zsh";
fi

